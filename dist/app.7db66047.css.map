{"version":3,"sources":["../src/scss/_utilities.scss","../src/scss/_buttons.scss","../src/scss/_config.scss","../src/scss/app.scss","../src/scss/_mobile.scss"],"names":[],"mappings":"AAAA,WACE,gBAAA,CACA,cAAA,CACA,aAAA,CACA,cAQA,KACE,YAGF,MACE,cAGF,MACE,WAGF,KACE,aAEF,MACE,eAEF,MACE,eAnBF,KACE,YAGF,MACE,cAGF,MACE,WAGF,KACE,aAEF,MACE,eAEF,MACE,eAnBF,KACE,YAGF,MACE,cAGF,MACE,WAGF,KACE,aAEF,MACE,eAEF,MACE,eAnBF,KACE,YAGF,MACE,cAGF,MACE,WAGF,KACE,aAEF,MACE,eAEF,MACE,eAnBF,KACE,YAGF,MACE,cAGF,MACE,WAGF,KACE,aAEF,MACE,eAEF,MACE,eC9BJ,4BACE,oBAAA,CACA,iBAAA,CACA,gBAAA,CACA,WAEA,wCACE,qBAIJ,aCUE,wBDLwB,CCMxB,WDHF,eCEE,wBDCwB,CCAxB,WClBF,EACE,qBAAA,CACA,QAAA,CACA,UAGF,KACE,wBDTY,CCUZ,sCDTW,CCUX,gBAGF,OACE,iBAAA,CACA,kBAAA,CACA,yBAAA,CACA,YAAA,CACA,6BAGF,GACE,gBC1BF,yBACE,WACE","file":"app.7db66047.css","sourceRoot":"../public","sourcesContent":[".container {\n  max-width: 1100px;\n  padding: 0 30px;\n  margin: 0 auto;\n  overflow: auto;\n}\n\n// Margin & padding classes using loop\n$spaceamounts: (1, 2, 3, 4, 5);\n\n// Kinda like for each loop and template literal in JS\n@each $space in $spaceamounts {\n  .m-#{$space} {\n    margin: #{$space}rem;\n  }\n  // for top & bottom\n  .my-#{$space} {\n    margin: #{$space}rem 0;\n  }\n  // for left & right\n  .mx-#{$space} {\n    margin: 0 #{$space};\n  }\n\n  .p-#{$space} {\n    padding: #{$space}rem;\n  }\n  .py-#{$space} {\n    padding: #{$space}rem 0;\n  }\n  .px-#{$space} {\n    padding: 0 #{$space}rem;\n  }\n}\n","// Create shared styles since some buttons are gonna be the same\n%btn {\n  display: inline-block;\n  border-radius: 5px;\n  padding: 8px 20px;\n  margin: 3px;\n\n  &:hover {\n    transform: scale(0.98);\n  }\n}\n\n.btn-primary {\n  @extend %btn;\n  // Here, we're using the lighten/darken functions\n  // background-color: lighten($primary-color, 10%);\n  // add mixins here\n  @include set-background(lighten($primary-color, 10%));\n}\n\n.btn-secondary {\n  @extend %btn;\n  // background-color: $secondary-color;\n  @include set-background(lighten($secondary-color, 10%));\n}\n","// This file contains any variables, mixins, functions, etc.\n\n// Variables\n$light-color: #f4f4f4;\n$font-stack: Arial, Helvetica, sans-serif;\n$primary-color: #0e6cff;\n// $primary-color: #e0ffff;\n$secondary-color: #ff8700;\n\n// Set text color based on bg. lighteness is based on 1-100\n// Fuctions can be used anywhere.\n@function set-text-color($color) {\n  @if (lightness($color) > 70) {\n    @return #333;\n  } @else {\n    @return #fff;\n  }\n}\n\n// Set background and text color using mixins.\n// Note: Mixins don't return anything\n@mixin set-background($color) {\n  background-color: $color;\n  color: set-text-color($color);\n}\n","@import \"config\";\n@import \"utilities\";\n@import \"buttons\";\n\n// Add a reset / base styling\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: $light-color;\n  font-family: $font-stack;\n  line-height: 1.6;\n}\n\nheader {\n  text-align: center;\n  margin-bottom: 40px;\n  background: rgba(0, 0, 0, 0.3);\n  padding: 30px;\n  border-bottom: 5px #fff solid;\n}\n\nul {\n  list-style: none;\n}\n\n@import \"mobile\";\n","@media (max-width: 700px) {\n  .container {\n    overflow-x: hidden;\n  }\n}\n"]}